{
  "Description": "Creates a VPC to execute SpeedyCHAIN cloud-based testing scenarios",
  "Parameters": {
    "NameServerIP": {
      "Description": "Pyro4 Name Server IP address",
      "Type": "String",
      "ConstraintDescription": "must be a valid IP address.",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
      "Default": "127.0.0.1"
    },
    "NameServerPort": {
      "Description": "Pyro4 Name Server port",
      "Type": "String",
      "ConstraintDescription": "must be a number.",
      "Default": "9090"
    }
  },
  "Mappings": {
    "RegionMap": {
      "us-east-1": {
        "CIDRRange": "1",
        "AMIImageId": "ami-09122897a26189237"
      },
      "us-east-2": {
        "CIDRRange": "2",
        "AMIImageId": ""
      },
      "us-west-1": {
        "CIDRRange": "3",
        "AMIImageId": ""
      },
      "us-west-2": {
        "CIDRRange": "4",
        "AMIImageId": "ami-0ee456256efd1d174"
      },
      "ap-east-1": {
        "CIDRRange": "5",
        "AMIImageId": ""
      },
      "ap-south-1": {
        "CIDRRange": "6",
        "AMIImageId": ""
      },
      "ap-northeast-2": {
        "CIDRRange": "7",
        "AMIImageId": ""
      },
      "ap-southeast-1": {
        "CIDRRange": "8",
        "AMIImageId": ""
      },
      "ap-southeast-2": {
        "CIDRRange": "9",
        "AMIImageId": ""
      },
      "ap-northeast-1": {
        "CIDRRange": "10",
        "AMIImageId": "ami-0d1fa30e67f8e5502"
      },
      "ca-central-1": {
        "CIDRRange": "11",
        "AMIImageId": ""
      },
      "cn-north-1": {
        "CIDRRange": "12",
        "AMIImageId": ""
      },
      "cn-northwest-1": {
        "CIDRRange": "13",
        "AMIImageId": ""
      },
      "eu-central-1": {
        "CIDRRange": "14",
        "AMIImageId": ""
      },
      "eu-west-1": {
        "CIDRRange": "15",
        "AMIImageId": ""
      },
      "eu-west-2": {
        "CIDRRange": "16",
        "AMIImageId": ""
      },
      "eu-west-3": {
        "CIDRRange": "17",
        "AMIImageId": ""
      },
      "eu-north-1": {
        "CIDRRange": "18",
        "AMIImageId": ""
      },
      "sa-east-1": {
        "CIDRRange": "19",
        "AMIImageId": "ami-059e48fc517fe0bb2"
      }
    }
  },
  "Conditions": {
    "CreateNameServer": {
      "Fn::Equals": [
        {
          "Ref": "AWS::Region"
        },
        "us-east-1"
      ]
    }
  },
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": {
          "Fn::Join": [
            ".",
            [
              "10",
              {
                "Fn::FindInMap": [
                  "RegionMap",
                  "us-west-2",
                  "CIDRRange"
                ]
              },
              "0.0/16"
            ]
          ]
        },
        "EnableDnsSupport": true,
        "EnableDnsHostnames": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  "vpc",
                  "us-west-2"
                ]
              ]
            }
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  "igw",
                  "us-west-2"
                ]
              ]
            }
          }
        ]
      }
    },
    "InternetGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        },
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "PublicSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": {
          "Fn::Join": [
            ".",
            [
              "10",
              {
                "Fn::FindInMap": [
                  "RegionMap",
                  "us-west-2",
                  "CIDRRange"
                ]
              },
              "1.0/24"
            ]
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  "snet",
                  "us-west-2",
                  "pub"
                ]
              ]
            }
          }
        ]
      }
    },
    "PrivateSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": {
          "Fn::Join": [
            ".",
            [
              "10",
              {
                "Fn::FindInMap": [
                  "RegionMap",
                  "us-west-2",
                  "CIDRRange"
                ]
              },
              "2.0/24"
            ]
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  "snet",
                  "us-west-2",
                  "priv"
                ]
              ]
            }
          }
        ]
      }
    },
    "NatGatewayEIP": {
      "Type": "AWS::EC2::EIP",
      "DependsOn": "InternetGatewayAttachment",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "NatGateway": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "NatGatewayEIP",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "PublicSubnet"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  "ngw",
                  "us-west-2"
                ]
              ]
            }
          }
        ]
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  "rtab",
                  "us-west-2",
                  "pub"
                ]
              ]
            }
          }
        ]
      }
    },
    "DefaultPublicRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "InternetGatewayAttachment",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicSubnetRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "SubnetId": {
          "Ref": "PublicSubnet"
        }
      }
    },
    "PrivateRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  "rtab",
                  "us-west-2",
                  "priv"
                ]
              ]
            }
          }
        ]
      }
    },
    "DefaultPrivateRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "PrivateRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "NatGateway"
        }
      }
    },
    "PrivateSubnetRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PrivateRouteTable"
        },
        "SubnetId": {
          "Ref": "PrivateSubnet"
        }
      }
    },
    "PublicSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": {
          "Fn::Join": [
            "-",
            [
              "sgrp",
              "us-west-2",
              "pub"
            ]
          ]
        },
        "GroupDescription": "Public security group",
        "VpcId": {
          "Ref": "VPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 22,
            "ToPort": 22,
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 0,
            "ToPort": 65535,
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  "sgrp",
                  "us-west-2",
                  "pub"
                ]
              ]
            }
          }
        ]
      }
    },
    "PrivateSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": {
          "Fn::Join": [
            "-",
            [
              "sgrp",
              "us-west-2",
              "priv"
            ]
          ]
        },
        "GroupDescription": "Private security group",
        "VpcId": {
          "Ref": "VPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 0,
            "ToPort": 65535,
            "SourceSecurityGroupId": {
              "Ref": "PublicSecurityGroup"
            }
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 0,
            "ToPort": 65535,
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  "sgrp",
                  "us-west-2",
                  "priv"
                ]
              ]
            }
          }
        ]
      }
    },
    "NameServer": {
      "Type": "AWS::EC2::Instance",
      "Condition": "CreateNameServer",
      "Properties": {
        "InstanceType": "t2.micro",
        "KeyName": "speedychain",
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMIImageId"
          ]
        },
        "SubnetId": {
          "Ref": "PublicSubnet"
        },
        "SecurityGroupIds": [
          {
            "Ref": "PublicSecurityGroup"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "name-server"
            }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash",
                "set -x",
                "exec > >(tee /var/log/user-data.log|logger -t user-data ) 2>&1",
                "date '+%Y-%m-%d %H:%M:%S'# Install pip",
                "#Install pip",
                "curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py",
                "python2.7 get-pip.py",
                "# Install Pyro4",
                "pip install Pyro4",
                "# Run Pyro4",
                "pyro4-ns -n 0.0.0.0 -p 9090"
              ]
            ]
          }
        }
      }
    },
    "Gateway": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "t2.micro",
        "KeyName": "speedychain",
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMIImageId"
          ]
        },
        "SubnetId": {
          "Ref": "PublicSubnet"
        },
        "SecurityGroupIds": [
          {
            "Ref": "PublicSecurityGroup"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "gateway-us-west-2"
            }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash",
                "set -x",
                "exec > >(tee /var/log/user-data.log|logger -t user-data ) 2>&1",
                "date '+%Y-%m-%d %H:%M:%S'# Install pip",
                "# Install dev tools",
                "yum install update",
                "yum install -y gcc g++ make libffi-dev openssl-dev",
                "# Install pip",
                "curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py",
                "python2.7 get-pip.py",
                "# Install git",
                "yum install -y git",
                "# Clone repo",
                "git clone https://github.com/conseg/speedychain.git /app",
                "cd app/src",
                "git pull",
                "# Install dependencies",
                "cp ./conf/pip.conf /etc/",
                "pip install --no-cache-dir -r requirements.txt",
                "# Run gateway",
                {
                  "Fn::Join": [
                    " ",
                    [
                      "python",
                      "Gateway.py",
                      {
                        "Ref": "NameServerIP"
                      },
                      {
                        "Ref": "NameServerPort"
                      },
                      {
                        "Fn::Sub": "gateway-us-west-2"
                      },
                      "&"
                    ]
                  ]
                }
              ]
            ]
          }
        }
      }
    },
    "DeviceSimulator": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "t2.micro",
        "KeyName": "speedychain",
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMIImageId"
          ]
        },
        "SubnetId": {
          "Ref": "PublicSubnet"
        },
        "SecurityGroupIds": [
          {
            "Ref": "PublicSecurityGroup"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "device-us-west-2"
            }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash",
                "set -x",
                "exec > >(tee /var/log/user-data.log|logger -t user-data ) 2>&1",
                "date '+%Y-%m-%d %H:%M:%S'# Install pip",
                "# Install dev tools",
                "yum install update",
                "yum install -y gcc g++ make libffi-dev openssl-dev",
                "# Install pip",
                "curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py",
                "python2.7 get-pip.py",
                "# Install git",
                "yum install -y git",
                "# Clone repo",
                "git clone https://github.com/conseg/speedychain.git /app",
                "cd app/src",
                "git pull",
                "# Install dependencies",
                "cp ./conf/pip.conf /etc/",
                "pip install --no-cache-dir -r requirements.txt"
              ]
            ]
          }
        }
      }
    }
  },
  "Outputs": {
    "VPC": {
      "Description": "Reference to the VPC",
      "Value": {
        "Ref": "VPC"
      }
    },
    "PublicSubnet": {
      "Description": "Reference to the public subnet",
      "Value": {
        "Ref": "PublicSubnet"
      }
    },
    "PrivateSubnet": {
      "Description": "Reference to the private subnet",
      "Value": {
        "Ref": "PrivateSubnet"
      }
    },
    "PublicSecurityGroup": {
      "Description": "Reference to the public security group",
      "Value": {
        "Ref": "PublicSecurityGroup"
      }
    },
    "PrivateSecurityGroup": {
      "Description": "Reference to the private security group",
      "Value": {
        "Ref": "PrivateSecurityGroup"
      }
    },
    "GatewayId": {
      "Description": "InstanceId of the SpeedyCHAIN Gateway",
      "Value": {
        "Ref": "Gateway"
      }
    },
    "GatewayPrivateDNS": {
      "Description": "Private DNSName of the SpeedyCHAIN Gateway",
      "Value": {
        "Fn::GetAtt": [
          "Gateway",
          "PrivateDnsName"
        ]
      }
    },
    "GatewayPrivateIP": {
      "Description": "Private IP address of the SpeedyCHAIN Gateway",
      "Value": {
        "Fn::GetAtt": [
          "Gateway",
          "PrivateIp"
        ]
      }
    },
    "DeviceSimulatorId": {
      "Description": "InstanceId of the SpeedyCHAIN Device Simulator",
      "Value": {
        "Ref": "DeviceSimulator"
      }
    },
    "DeviceSimulatorPrivateDNS": {
      "Description": "Private DNSName of the SpeedyCHAIN Device Simulator",
      "Value": {
        "Fn::GetAtt": [
          "DeviceSimulator",
          "PrivateDnsName"
        ]
      }
    },
    "DeviceSimulatorPrivateIP": {
      "Description": "Private IP address of the SpeedyCHAIN Device Simulator",
      "Value": {
        "Fn::GetAtt": [
          "DeviceSimulator",
          "PrivateIp"
        ]
      }
    },
    "DeviceSimulatorPublicDNS": {
      "Description": "Public DNSName of the SpeedyCHAIN Device Simulator",
      "Value": {
        "Fn::GetAtt": [
          "DeviceSimulator",
          "PublicDnsName"
        ]
      }
    },
    "DeviceSimulatorPublicIP": {
      "Description": "Public IP address of the SpeedyCHAIN Device Simulator",
      "Value": {
        "Fn::GetAtt": [
          "DeviceSimulator",
          "PublicIp"
        ]
      }
    }
  }
}